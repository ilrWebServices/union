{"version":3,"sources":["banner/banner.scss","../global/_breakpoints.scss","../global/_mixins.scss"],"names":[],"mappings":"AAEA;EACE;;;AAGF;AAAA;AAAA;AAGA;EACE;;ACKE;EDNJ;IAII;IACA;IACA;;;ACAA;EDGF;IAEI;IACA;IACA;IACA;;;AAKJ;EACE;;AAGF;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EEJF;EACA;;AAEA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,SAbkD;;AFWlD;EACE;EACA;EACA;;AAMF;EACE;;ACxCF;EDiBF;IA2BI;IACA;IACA;;;;AC9CF;EDmDJ;IAEI;;;ACrDA;EDwDF;IAEI;;;;AAKN;AAAA;AAAA;AAGA;EACE;;AAEA;EAGE;;AAIA;EACE;;AC7EF;EDkEJ;IAgBI;;;AClFA;EDkEJ;IAoBI;;;AAGF;EACE;;AAGF;EACE;EACA;EACA;EACA;;AAGF;EACE;;AAGF;EACE;EACA;;AAGF;EACE;EACA;EACA;;AAGF;EACE;EACA;EACA;EACA;;AAEA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AAIJ;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EE1HF;EACA;;AAEA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,SAbkD;;AFgIlD;EACE;EACA;EACA;;AAMF;EACE;;;AAKN;AAGA;AAAA;AAAA;AAIE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AAEA;EACE;;ACrLF;EDyKF;IAgBI;;;AAGF;EACE;;AAIJ;EACE;EACA;EACA;EACA;EACA;EACA;;AAIA;EACE;EACA;EACA;;AAMF;EACE;;AAIJ;EACE;EACA;EACA;;;AAGJ","file":"banner/banner.css","sourcesContent":["@import './global/global';\n\n.cu-banner {\n  position: relative;\n}\n\n/*=============================================\n=            Panel banner            =\n=============================================*/\n.cu-banner--panel {\n  padding: 1em 33% 1em 2em;\n\n  @include breakpoint(md) {\n    display: grid;\n    grid-template-columns: 66% 34%;\n    padding: 0;\n  }\n\n  .cu-banner__content {\n    @include breakpoint(md) {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      padding: var(--cu-vr1) var(--cu-ps2);\n    }\n\n  }\n\n  .cu-button {\n    align-self: flex-start;\n  }\n\n  .cu-banner__media {\n    position: absolute;\n    overflow: hidden;\n    max-width: none;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    // z-index: -2;\n    @include overlay;\n\n    // Only specific Replaced Elements can cover the media div.\n    // See https://html.spec.whatwg.org/multipage/rendering.html#replaced-elements\n    img, video {\n      object-fit: cover;\n      width: 100%;\n      height: 100%;\n    }\n\n    // Any element in the media section that isn't a replaced element should\n    // be ignored. This will allow the object-fit property to work even if the\n    // img or video is nested in other markup.\n    :not(img):not(video) {\n      display: contents;\n    }\n\n    @include breakpoint(md) {\n      position: relative;\n      grid-column: 1;\n      grid-row: 1;\n    }\n  }\n}\n\n.cu-banner--panel-left {\n  @include breakpoint(md) {\n    grid-template-columns: 34% 66%;\n  }\n\n  .cu-banner__media {\n    @include breakpoint(md) {\n      grid-column: 2;\n    }\n  }\n}\n\n/*=============================================\n=            Page banner                      =\n=============================================*/\n.cu-banner--page {\n  padding: var(--cu-vr1);\n\n  &.cu-banner--with-media {\n    // Override any colorscheme.\n    // @todo Use ::has(.cu-banner__media) once supported in Firefox.\n    --cu-text-color: #{$white};\n  }\n\n  &.cu-banner--with-media.cu-colorscheme--light {\n    .cu-button {\n      --cu-text-color: #{$black};\n    }\n  }\n\n  @include breakpoint(sm) {\n    padding: var(--cu-vr1) var(--cu-vr2);\n  }\n\n  @include breakpoint(md) {\n    padding: var(--cu-vr1) var(--cu-vr4);\n  }\n\n  .cu-breadcrumb {\n    margin-bottom: var(--cu-vr1);\n  }\n\n  .cu-banner__content {\n    max-width: var(--cu-max-width-section, #{$max-width-section});\n    margin: 0 auto;\n    z-index: 2;\n    position: relative;\n  }\n\n  .cu-banner__summary {\n    margin-bottom: var(--cu-vr2);\n  }\n\n  .cu-banner__list-heading {\n    --cu-font-size: var(--cu-ms0); // @todo check me\n    --cu-font-weight: bold !important;\n  }\n\n  .cu-banner__list {\n    --cu-font-size: var(--cu-ms-1);\n    padding: 0;\n    list-style-type: none;\n  }\n\n  .cu-banner__list-item {\n    padding-bottom: var(--cu-vr-1);\n    margin-bottom: var(--cu-vr-1);\n    max-width: 75%;\n    position: relative;\n\n    &::after {\n      content: '';\n      display: block;\n      position: absolute;\n      left: 0;\n      bottom: 0;\n      width: 10%;\n      max-width: 100%;\n      padding: .25em 0 0 0;\n      border-bottom: 4px solid var(--cu-color-brand, #{$cornell-red});\n    }\n  }\n\n  .cu-banner__media {\n    position: absolute;\n    overflow: hidden;\n    max-width: none;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 1;\n    @include overlay;\n\n    // Only specific Replaced Elements can cover the media div.\n    // See https://html.spec.whatwg.org/multipage/rendering.html#replaced-elements\n    img, video {\n      object-fit: cover;\n      width: 100%;\n      height: 100%;\n    }\n\n    // Any element in the media section that isn't a replaced element should\n    // be ignored. This will allow the object-fit property to work even if the\n    // img or video is nested in other markup.\n    :not(img):not(video) {\n      display: contents;\n    }\n  }\n}\n\n/*=====  End of Page banner  ======*/\n\n\n/*=============================================\n=            Video banner                     =\n=============================================*/\n.cu-banner--video {\n  .cu-banner__content {\n    position: absolute;\n    pointer-events: none;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    padding: var(--cu-vr1) var(--cu-ps1);\n    z-index: 1; // Required for Chrome to see the hover state and selection in content markup.\n\n    > * {\n      pointer-events: auto;\n    }\n\n    @include breakpoint(lg) {\n      padding: var(--cu-vr1) var(--cu-ps3);\n    }\n\n    &--align-bottom {\n      justify-content: flex-end;\n    }\n  }\n\n  .cu-banner__media {\n    overflow: hidden;\n    max-width: none;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n\n    // Only specific Replaced Elements can cover the media div.\n    // See https://html.spec.whatwg.org/multipage/rendering.html#replaced-elements\n    img, video {\n      object-fit: cover;\n      width: 100%;\n      height: 100%;\n    }\n\n    // Any element in the media section that isn't a replaced element should\n    // be ignored. This will allow the object-fit property to work even if the\n    // img or video is nested in other markup.\n    :not(img):not(video) {\n      display: contents;\n    }\n  }\n\n  .video-pause {\n    position: absolute;\n    right: 0;\n    top: 1rem;\n  }\n}\n/*=====  End of Video banner  ======*/\n","$breakpoints: (xs: 30rem, // ~480px\n  sm: 37.5rem, // ~600px\n  md: 61rem, // ~976px\n  lg: 80rem, // ~1280px\n  xl: 90rem // ~1440px\n);\n\n@mixin breakpoint($breakpoint, $logic: false) {\n  @if($logic) {\n    @media #{$logic} and (min-width: map-get($map: $breakpoints, $key: $breakpoint)) {\n      @content;\n    }\n  }\n\n  @else {\n    @media (min-width: map-get($map: $breakpoints, $key: $breakpoint)) {\n      @content;\n    }\n  }\n}\n","// Global mixins - distinct from component mixins\n\n//*----------------------------------*\\\n//  #TOOLS - VISUALLY HIDDEN\n//\\*----------------------------------*/\n\n/// Visually hidden - Make an element visually hidden, but accessible to screen readers, etc.\n/// @author John Albin\n/// @see http://snook.ca/archives/html_and_css/hiding-content-for-accessibility\n/// @link https://github.com/JohnAlbin/zen-style-guide/blob/gh-pages/sass/init/visually-hidden/_visually-hidden.scss\n/// @group Tools\n/// @example scss - basic usage\n///   .centered {\n///     @include visually-hidden();\n///   }\n/// @output Output from the example\n///   .centered {\n///     position: absolute !important;\n///     height: 1px;\n///     width: 1px;\n///     overflow: hidden;\n///     clip: rect(1px, 1px, 1px, 1px);\n///     word-wrap: normal;\n///   }\n\n@mixin visually-hidden {\n  position: absolute !important;\n  height: 1px;\n  width: 1px;\n  overflow: hidden;\n  clip: rect(1px, 1px, 1px, 1px);\n  word-wrap: normal;\n}\n\n@mixin overlay($color: #000, $opacity: 0.5, $z-index: 2, $gradient: null) {\n  position: relative;\n  pointer-events: none;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba($color, $opacity);\n    background: rgba($color, var(--cu-overlay-opacity, #{$opacity}));\n    z-index: $z-index;\n\n    // Initial boolean implementation for portrait gradients.\n    // The gradient implementation will be extended to include variations here.\n    @if $gradient {\n      background: transparent;\n      background-image: linear-gradient(to bottom, transparent 25%, rgba($color, $opacity) 100%);\n\n      @include breakpoint(md) {\n        background-image: linear-gradient(to bottom, transparent 50%, rgba($color, $opacity) 100%);\n      }\n    }\n  }\n}\n"]}