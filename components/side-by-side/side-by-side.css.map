{"version":3,"sources":["side-by-side/side-by-side.scss","../global/_breakpoints.scss"],"names":[],"mappings":"AAKA;EACE;EACA;EACA;EAGA;;AAEA;EACE;;AAGF;EACE;;ACHA;EDVJ;IAkBI;IACA;;EAEA;IACE;;EAIF;IACE;;EAGF;IACE;;;;AAMN;EACE;;;AAIF;EACE;EACA;EACA;;AAEA;EACE;;;AAIJ;EACE;EACA;;AAEA;EACE;;AAEA;EACE;;;AAKN;EACE;;;AAIF;EACE;EACA;EACA;;AAEA;EACE;EACA;EACA;EACA;;AAGF;EACE;;;ACzEA;EDgFA;IACE;;EAGF;IACE;;;;AAON;EACE;EACA;;AAEA;AAAA;EAEE;EACA,YACE;EAGF;;AAIF;EACE;;AAIF;EACE;;AAKA;AAAA;EAEE;EACA,YACE;EAGF","file":"side-by-side/side-by-side.css","sourcesContent":["// Side by Side Component\n// Leverages design patterns from ilr-base and global styles\n\n@import '../../global/global';\n\n.cu-side-by-side {\n  display: grid;\n  gap: var(--cu-vr2);\n  align-items: center;\n\n  // Mobile-first: always stack vertically on small screens\n  grid-template-columns: 1fr;\n\n  .cu-side-by-side__media {\n    order: -1; // Image always appears first on mobile\n  }\n\n  .cu-side-by-side__content {\n    order: 1;\n  }\n\n  // Desktop: side by side layout\n  @include breakpoint(sm) {\n    grid-template-columns: auto 50%;\n    gap: var(--cu-vr3);\n\n    &.cu-layoutscheme--reversed {\n      grid-template-columns: 50% auto;\n    }\n\n    // Reset order for desktop - variants will handle positioning\n    .cu-side-by-side__media {\n      order: initial;\n    }\n\n    .cu-side-by-side__content {\n      order: initial;\n    }\n  }\n}\n\n// Add padding when a colorscheme is applied\n.cu-side-by-side[class*=\"cu-colorscheme--\"] {\n  padding: var(--cu-vr1) var(--cu-ps1);\n}\n\n// Content area styling\n.cu-side-by-side__content {\n  display: flex;\n  flex-direction: column;\n  gap: var(--cu-vr1);\n\n  .cu-button {\n    align-self: flex-start;\n  }\n}\n\n.cu-side-by-side__body {\n  margin: 0;\n  color: var(--cu-text-color);\n\n  p {\n    margin-bottom: var(--cu-vr1);\n\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n}\n\n.cu-side-by-side__button {\n  margin-bottom: 0;\n}\n\n// Media area styling\n.cu-side-by-side__media {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  img, video {\n    width: 100%;\n    height: auto;\n    display: block;\n    border-radius: var(--cu-border-radius);\n  }\n\n  iframe {\n    width: 100%;\n  }\n}\n\n// Variant: Reversed layout (media on left, content on right)\n.cu-layoutscheme--reversed {\n  @include breakpoint(sm) {\n    .cu-side-by-side__media {\n      order: -1;\n    }\n\n    .cu-side-by-side__content {\n      order: 1;\n    }\n  }\n}\n\n// Frame styling for side-by-side component\n// Based on cu-component__frame pattern from ILR project\n.cu-side-by-side.cu-component__frame {\n  --frame-color: #ccc;\n  --frame-width: 16px;\n\n  .cu-image,\n  iframe {\n    padding: var(--frame-width) var(--frame-width) var(--frame-width) 0;\n    background:\n      linear-gradient(var(--frame-color) 0 0) top right / 75% var(--frame-width),\n      linear-gradient(var(--frame-color) 0 0) right / var(--frame-width) 100%,\n      linear-gradient(var(--frame-color) 0 0) bottom right / 15% var(--frame-width), transparent;\n    background-repeat: no-repeat;\n  }\n\n  // Vibrant (brand color) variant\n  &.cu-component__frame--vibrant {\n    --frame-color: var(--cu-color-brand, #{$cornell-red});\n  }\n\n  // Dark variant\n  &.cu-component__frame--dark {\n    --frame-color: #222;\n  }\n\n  // Mirror the frame for reversed layouts\n  &.cu-layoutscheme--reversed {\n    .cu-image,\n    iframe {\n      padding: var(--frame-width) 0 var(--frame-width) var(--frame-width);\n      background:\n        linear-gradient(var(--frame-color) 0 0) bottom left / 75% var(--frame-width),\n        linear-gradient(var(--frame-color) 0 0) left / var(--frame-width) 100%,\n        linear-gradient(var(--frame-color) 0 0) top left / 15% var(--frame-width), transparent;\n      background-repeat: no-repeat;\n    }\n  }\n}\n","$breakpoints: (xs: 30rem, // ~480px\n  sm: 37.5rem, // ~600px\n  md: 61rem, // ~976px\n  lg: 80rem, // ~1280px\n  xl: 90rem // ~1440px\n);\n\n@mixin breakpoint($breakpoint, $logic: false) {\n  @if($logic) {\n    @media #{$logic} and (min-width: map-get($map: $breakpoints, $key: $breakpoint)) {\n      @content;\n    }\n  }\n\n  @else {\n    @media (min-width: map-get($map: $breakpoints, $key: $breakpoint)) {\n      @content;\n    }\n  }\n}\n"]}