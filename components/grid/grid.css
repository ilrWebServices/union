:root {
  --cu-grid-row-gap: var(--cu-vr0);
  --cu-grid-column-gap: var(--cu-vr0);
}

.cu-grid {
  display: grid;
  grid-auto-flow: dense;
  align-items: stretch;
  grid-gap: var(--cu-grid-row-gap) var(--cu-grid-column-gap);
  grid-template-columns: 1fr;
  margin: var(--cu-component-margin-top, 0) auto var(--cu-component-margin-bottom, 0) auto;
  background-color: transparent;
}

@media (min-width: 30rem) {
  .cu-grid--5col {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (min-width: 37.5rem) {
  .cu-grid--gapless {
    grid-gap: 0;
  }

  .cu-grid--2col {
    grid-template-columns: 1fr 1fr;
  }

  .cu-grid--3col {
    grid-template-columns: repeat(3, 1fr);
  }

  .cu-grid--4col {
    grid-template-columns: repeat(4, 1fr);
  }

  .cu-grid--5col {
    /* grid-template-columns: repeat(3, 1fr); */
  }

  .cu-grid--2-1 {
    grid-template-columns: 2fr 1fr;
  }

  .cu-grid--2-1-lead {
    grid-template-columns: repeat(6, 1fr);
  }

  .cu-grid--2-1-lead>* {
    grid-column-start: span 3;
  }

  .cu-grid--2-1-lead>*:first-child {
    grid-column: 1 / -3;
  }

  .cu-grid--2-1-lead>*:nth-child(2) {
    grid-column-start: span 2;
  }

  .cu-grid--3-1 {
    grid-template-columns: 3fr 1fr;
  }

  .cu-grid--1-2 {
    grid-template-columns: 1fr 2fr;
  }

  .cu-grid--1-3 {
    grid-template-columns: 1fr 3fr;
  }

  .cu-grid--3col-lead {
    grid-template-columns: repeat(3, 1fr);
  }

  .cu-grid--3col-lead :first-child {
    grid-column-end: span 2;
    grid-row-end: span 2;
  }

  .cu-grid--4col-lead {
    grid-template-columns: repeat(4, 1fr);
  }

  .cu-grid--4col-lead :first-child {
    grid-column-end: span 2;
    grid-row-end: span 2;
  }

  .cu-grid--align-end {
    align-items: end;
  }

  .cu-grid--1x2,
  .cu-grid--two-down {
    grid-template-columns: 1fr 1fr;
  }

  .cu-grid--1x2>*:nth-child(3n+1),
  .cu-grid--two-down>*:nth-child(3n+1) {
    grid-column: 1/-1;
  }

  .cu-grid--2x1,
  .cu-grid--two-up {
    grid-template-columns: 1fr 1fr;
  }

  .cu-grid--2x1>*:nth-child(3n+3),
  .cu-grid--two-up>*:nth-child(3n+3) {
    grid-column: 1/-1;
  }

  .cu-grid--two-left {
    grid-template-columns: 1fr 1fr;
  }

  .cu-grid--two-left>*:nth-child(3n+2) {
    grid-row: span 2;
  }

  .cu-grid--two-right {
    grid-template-columns: 1fr 1fr;
  }

  .cu-grid--two-right>*:nth-child(3n+1) {
    grid-row: span 2;
  }
}

@media (min-width: 61rem) {
  .cu-grid--5col {
    grid-template-columns: repeat(5, 1fr);
  }
}

.cu-grid .grid-item {
  margin: 0;
}

/*# sourceMappingURL=grid.css.map */
