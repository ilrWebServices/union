@import './source/global/global';

// Set the default grid gap
:root {
  --cu-grid-row-gap: var(--cu-vr0);
  --cu-grid-column-gap: var(--cu-vr0);
}

.cu-grid {
  display: grid;
  grid-auto-flow: dense;
  align-items: stretch;
  grid-gap: var(--cu-grid-row-gap) var(--cu-grid-column-gap);
  grid-template-columns: 1fr;
  margin: var(--cu-component-margin-top, 0) auto var(--cu-component-margin-bottom, 0) auto;

  @include breakpoint(xs) {
    &--2col,
    &--3col,
    &--4col {
      grid-template-columns: 1fr 1fr;
    }
  }

  @include breakpoint(sm) {

    &--gapless {
      grid-gap: 0;
    }

    &--2col {
      grid-template-columns: 1fr 1fr;
    }

    &--3col {
      grid-template-columns: repeat(3, 1fr);
    }

    &--4col {
      grid-template-columns: repeat(4, 1fr);
    }

    &--2-1 {
      grid-template-columns: 2fr 1fr;
    }

    &--2-1-lead {
      grid-template-columns: repeat(6, 1fr);

      > * {
        grid-column-start: span 3;

        &:first-child {
          grid-column: 1 / -3;
        }

        &:nth-child(2) {
          grid-column-start: span 2;
        }
      }
    }

    &--3-1 {
      grid-template-columns: 3fr 1fr;
    }

    &--1-2 {
      grid-template-columns: 1fr 2fr;
    }

    &--1-3 {
      grid-template-columns: 1fr 3fr;
    }

    &--3col-lead {
      grid-template-columns: repeat(3, 1fr);

      :first-child {
        grid-column-end: span 2;
        grid-row-end: span 2;
      }
    }

    &--4col-lead {
      grid-template-columns: repeat(4, 1fr);

      :first-child {
        grid-column-end: span 2;
        grid-row-end: span 2;
      }
    }

    &--align-end {
      align-items: end;
    }

    &--1x2 {
      grid-template-columns: 1fr 1fr;

      > *:nth-child(3n+1) {
        grid-column: 1/-1;
      }
    }

    &--2x1 {
      grid-template-columns: 1fr 1fr;

      > *:nth-child(3n+3) {
        grid-column: 1/-1;
      }
    }
  }

  .grid-item {
    margin: 0;
  }
}
